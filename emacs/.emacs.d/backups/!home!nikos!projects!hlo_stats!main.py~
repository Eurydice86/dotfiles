from datetime import datetime

import fighter
import club

import requests
import uuid
import re
import json
from bs4 import BeautifulSoup

import sqlite3
import sql_helpers
import database


def event(link, year):
    event_id = link.split("/")[-2]
    full_url = "https://hemaratings.com" + link
    page = requests.get(full_url)

    soup = BeautifulSoup(page.text, features="lxml")

    if soup.find("h1"):
        if soup.find("h1").text.strip() == "Service Unavailable":
            print(f"Event {link} not found!")
            return

    sp = soup.find("div", id="main")
    event_name = sp.find("h2").text.strip()

    rs = sp.find_all("dd")
    metadata = []
    for r in rs:
        metadata.append(r.text.strip())

    month_name = metadata[0].split(" ")[0].strip()

    date_object = datetime.strptime(month_name, "%B")
    month_number = date_object.month

    day = metadata[0].split(" ")[1].strip()
    date = f"{day}/{month_number}/{year}"
    country = metadata[1].strip()
    state = None
    city = None
    if len(metadata) < 5:
        city = metadata[2].strip()
    if len(metadata) == 5:
        state = metadata[2].strip()
        country = metadata[1].strip()
        city = metadata[3].strip()

    event_dict = {
        "event_id": event_id,
        "event_name": event_name,
        "date": date,
        "country": country,
        "state": state,
        "city": city,
    }

    tournaments = sp.find_all("div", {"id": re.compile("heading_tournament_*")})

    all_fighters = []
    for t in tournaments:
        competition = t.find("span").text.strip()
        competition = competition.split(" - ")[0]
        competition_id = uuid.uuid4()
        competition_dict = {
            "competition_id": competition_id,
            "competition_name": competition,
            "event_id": event_id,
        }
        category_fighters = []

        category_table = t.find_next("table")
        rows = category_table.find_all("tr")
        rows = rows[1:]

        for r in rows:
            entries = r.find_all("td")
            stage = entries[0].text.strip()

            fighter_1 = entries[1]
            if fighter_1.find("a"):
                fighter_1_id = fighter_1.find("a")["href"].split("/")[-2]
            else:
                fighter_1_id = None
            fighter_2 = entries[2]
            if fighter_2.find("a"):
                fighter_2_id = fighter_2.find("a")["href"].split("/")[-2]
            else:
                fighter_2_id = None
            category_fighters.append(int(fighter_1_id))
            category_fighters.append(int(fighter_2_id))
        category_fighters = sorted(list(set(category_fighters)))
        category_fighters.insert(0, competition)
        all_fighters.append(category_fighters)

    return all_fighters


def hlo_list():
    hlos = {
        2014: 13,
        2023: 1794,
        2022: 1714,
        2020: 1581,
        2019: 1401,
        2018: 1224,
        2017: 55,
        2016: 1,
        2015: 7,
        2024: 1983,
    }
    return hlos

def do_the_things(year, cursor):
    fighters_list = event(f"/events/details/{hlos[year]}/", year)
    clubs = []

    fighter_dicts = []
    club_dicts = []
    category_dicts = []
    participation_dicts = []

    for competition in fighters_list:
        category_id = uuid.uuid4()
        competition_name = competition[0]
        category_dict = {
            "category_id": category_id,
            "category_name": competition_name,
            "year": year,
            "event": "Helsinki Longsword Open",
        }
        category_dicts.append(category_dict)

        counter = 0
        competition_clubs = []

        for f in competition[1:]:
            fighter_details = fighter.fighter(f"/fighters/details/{f}/")
            participation_dict = {
                "category_id": category_id,
                "fighter_id": fighter_details["fighter_id"],
            }
            participation_dicts.append(participation_dict)
            fighter_dicts.append(fighter_details)

            if fighter_details["club_id"]:
                competition_clubs.append(fighter_details["club_id"])
            counter += 1
            print(f"Processing {counter} of {len(competition)-1} participants in {competition_name}: {fighter_details["name"]} at HLO {year}")
        competition_clubs = list(set(competition_clubs))
        clubs += competition_clubs
    clubs = list(set(clubs))

    for c in clubs:
        counter += 1
        club_details = club.club(f"/clubs/details/{c}/")
        club_dicts.append(club_details)


    for f in fighter_dicts:
        cursor.execute(sql_helpers.insert("fighters", f))

    for c in club_dicts:
        cursor.execute(sql_helpers.insert("clubs", c))

    for c in category_dicts:
        cursor.execute(sql_helpers.insert("categories", c))

    for c in participation_dicts:
        cursor.execute(sql_helpers.insert("participations", c))
        



if __name__ == "__main__":

    conn = sqlite3.connect("data/hlo.db")
    cursor = conn.cursor()
    database.initialise(cursor)

    hlos = hlo_list()
    for hlo in hlos.keys():
        do_the_things(hlo, cursor)
    
    conn.commit()
    conn.close()
